CREATE DATABASE shoe_shop;

use shoe_shop;

CREATE TABLE employee(
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50)	
)

INSERT INTO employee(name) VALUES ('Hieu') ,('Duyen'),('Shi'),('Sony');


CREATE TABLE shoe (
	id INT AUTO_INCREMENT PRIMARY KEY,
	shoe_name VARCHAR(50),
	price DECIMAL(5,2)
)

INSERT INTO shoe(shoe_name, price) VALUES ('adidas',981.12), ('nike',124.45),('bitis',841.62),('bitas',452.14),('samsung',851.32);


CREATE TABLE sold (
	emp_id INT NOT NULL,
	shoe_id INT NOT NULL,
	created_at TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY(emp_id) REFERENCES employee(id),
	FOREIGN KEY(shoe_id) REFERENCES shoe(id)
);


INSERT INTO sold(emp_id,shoe_id, created_at) VALUES (2,5,'2021-11-30'), (2,1,'2021-11-30') , (1,4,'2021-11-27');
INSERT INTO sold(emp_id,shoe_id) VALUES (3,5);




SELECT employee.name , sold.created_at AS date , SUM(shoe.price) as TOTAL FROM employee
JOIN sold
ON sold.emp_id = employee.id
JOIN shoe
ON sold.shoe_id = shoe.id
WHERE DATE_FORMAT(sold.created_at, '%Y-%m-%d') = CURDATE()
GROUP BY employee.id
ORDER BY TOTAL DESC 
LIMIT 1;




SELECT employee.name , shoe.id, sold.created_at  AS date , COUNT(*) AS NUM_SHOE FROM employee
JOIN sold
ON sold.emp_id = employee.id
JOIN shoe
ON sold.shoe_id = shoe.id
WHERE DATE_FORMAT(sold.created_at, '%Y-%m-%d') = (SELECT DATE_SUB(CURDATE(), INTERVAL 1 DAY))
GROUP BY employee.id
ORDER BY NUM_SHOE DESC 
LIMIT 1;



